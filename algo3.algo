ALGORITHM checkpoint_algo3

PROCEDURE vecteur(tab1,tab2)

 array_tab1_of INTEGER [1..3];
      array_tab2_of INTEGER [1..3];
VAR
    i,j,product : INTEGER
BEGIN
 FOR i FROM 0 TO 2  DO
 FOR j FROM 0 TO 2  DO
     set_instructions
 END_FOR 
  END_FOR  
  return 
  product:= tab1[i] * tab2[j]
END



ALGORITHM product_scalar
VAR
    tab1 V (3) : INTEGER
    tab2 U (3) : INTEGER
    i,P : INTEGER
BEGIN
    FOR i FROM 0 TO 2 STEP 1  DO
        write ("give the element", i + 1, "of the vector V")
        read (V (i) )
        write ("give the element", i + 1, "of the vector U")
        read (U (i) )
    END_FOR
    P:=0
    FOR i FROM 0 TO 2 STEP 1  DO
        P:= P + V(i) * U(i)
    END_FOR
    write ("product scalar of vactors U and V is:", P)
END


ALGORITHM vectors_orthogonal

VAR
    U (A,B) : INTEGER
    v (B,D) : INTEGER

BEGIN
    IF (A * C + B * D = 0) THEN
        write ("Vectors are orthogonal")
        
        ELSE
            write ("Vectors are not orthogonal")
        
    END_IF
END